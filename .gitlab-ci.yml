image: mcr.microsoft.com/dotnet/core/sdk:3.1

variables:
  HEROKU_STAGE_NAME: nodegem-heroku-api
  HEROKU_PROD_NAME: nodester-prod

stages:
  - build
  - migrate
  - deploy
  - artifacts

build_project:
  stage: build
  script:
    - cd WebApi/ && dotnet build WebApi.sln
  only:
    - develop
    - master

migrate:
  stage: migrate
  variables:
    ConnectionStrings__nodegemDb: $NODEGEM_DB
    ConnectionStrings__keysDb: $NODEGEM_KEYS_DB
  before_script:
    - dotnet tool install --global dotnet-ef --version 3.0.0
    - export PATH="$PATH:/root/.dotnet/tools"
  script:
    - cd WebApi/
    - dotnet ef database update --context NodegemContext
    - dotnet ef database update --context KeysContext
  only:
    - develop
    - master

build_and_deploy_artifacts:
  stage: artifacts
  cache:
    key: apt-cache
    paths:
      - apt-cache/
      - "$CI_PROJECT_DIR/pip-cache"

  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/pip-cache"

  before_script:
    - export APT_CACHE_DIR=`pwd`/apt-cache && mkdir -pv $APT_CACHE_DIR
    - apt-get update -yq
    - apt-get -o dir::cache::archives="$APT_CACHE_DIR" install -y software-properties-common
    - add-apt-repository ppa:deadsnakes/ppa
    - apt-get -o dir::cache::archives="$APT_CACHE_DIR" install -y python3.7
    - apt-get -o dir::cache::archives="$APT_CACHE_DIR" install -y python-pip
    - pip install awscli
  script:
    - cd scripts/
    - bash build_binaries
    - bash deploy_binaries
  only:
    - develop
    - master
    - tags

deploy:
  stage: deploy
  script:
    - apt-get update -yq
    - apt-get install -y ruby-dev
    - gem install dpl
    - dpl --provider=heroku --app=$HEROKU_STAGE_NAME --api-key=$HEROKU_API_KEY
  only:
    - develop

#!/bin/bash

apt install -y zip

CWD="$(pwd)"

cd Bridge/Bridge

if [[ "$OSTYPE" == "linux-gnu"* ]]; then
    echo 'Building Windows'
    dotnet publish -c release -r win-x64 /p:PublishSingleFile=true -o $CWD/binaries/win64 -v q
    echo 'Building OSX'
    dotnet publish -c release -r osx-x64 /p:PublishSingleFile=true -o $CWD/binaries/osx -v q
    echo 'Building Linux'
    dotnet publish -c release -r linux-x64 /p:PublishSingleFile=true -o $CWD/binaries/linux -v q
    echo 'Building Linux Arm'
    dotnet publish -c release -r linux-arm /p:PublishSingleFile=true -o $CWD/binaries/linux-arm32 -v q 
    echo 'Building Linux Arm 64 bit'
    dotnet publish -c release -r linux-arm64 /p:PublishSingleFile=true -o $CWD/binaries/linux-arm64 -v q
elif [[ "$OSTYPE" == "msys" ]]; then
    echo 'Building Windows'
    dotnet publish -c release -r win-x64 //p:PublishSingleFile=true -o $CWD/binaries/win64 -v q
    echo 'Building OSX'
    dotnet publish -c release -r osx-x64 //p:PublishSingleFile=true -o $CWD/binaries/osx -v q
    echo 'Building Linux'
    dotnet publish -c release -r linux-x64 //p:PublishSingleFile=true -o $CWD/binaries/linux -v q
    echo 'Building Linux Arm'
    dotnet publish -c release -r linux-arm //p:PublishSingleFile=true -o $CWD/binaries/linux-arm32 -v q
    echo 'Building Linux Arm 64 bit'
    dotnet publish -c release -r linux-arm64 //p:PublishSingleFile=true -o $CWD/binaries/linux-arm64 -v q
fi

tar 

mkdir -p $CWD/compressed
cd $CWD/compressed

cd $CWD/binaries/win64
zip -r $CWD/compressed/nodegem-win64.zip .
cd $CWD/compressed

tar -czvf nodegem-osx.tar.gz -C $CWD/binaries/osx .
tar -czvf nodegem-linux64.tar.gz -C $CWD/binaries/linux .
tar -czvf nodegem-linux-arm32.tar.gz -C $CWD/binaries/linux-arm32 .
tar -czvf nodegem-linux-arm64.tar.gz -C $CWD/binaries/linux-arm64 .

cd $CWD